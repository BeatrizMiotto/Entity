// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using entity.Database;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20230106214701_Migracoescarros")]
    partial class Migracoescarros
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Entity.Models.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("marca");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("modelo");

                    b.HasKey("Id");

                    b.ToTable("carros");
                });

            modelBuilder.Entity("Entity.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("Entity.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime")
                        .HasColumnName("data_entrega");

                    b.Property<DateTime>("DataLocacao")
                        .HasColumnType("datetime")
                        .HasColumnName("data_locacao");

                    b.Property<int>("DiasDeLocacao")
                        .HasColumnType("integer")
                        .HasColumnName("dias_de_locacao");

                    b.Property<int>("IdCarro")
                        .HasColumnType("integer")
                        .HasColumnName("id_carro");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer")
                        .HasColumnName("id_cliente");

                    b.Property<int?>("id_carro")
                        .HasColumnType("int");

                    b.Property<int?>("id_cliente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("id_carro");

                    b.HasIndex("id_cliente");

                    b.ToTable("pedidos", t =>
                        {
                            t.Property("id_carro")
                                .HasColumnName("id_carro1");

                            t.Property("id_cliente")
                                .HasColumnName("id_cliente1");
                        });
                });

            modelBuilder.Entity("Entity.Models.Pedido", b =>
                {
                    b.HasOne("Entity.Models.Carro", "Carro")
                        .WithMany()
                        .HasForeignKey("id_carro");

                    b.HasOne("Entity.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("id_cliente");

                    b.Navigation("Carro");

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
